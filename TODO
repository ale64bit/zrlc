TODO
===========================================================================
- analysis pass
  - environment
  - type check
- unit test
- error reporting
- code generation (vulkan,dummy)
  - c++ equivalent types (how to statically check offsets+alignment?)
  - graphics pipeline
    - create specialization config
    - what about fixed stage params?
    - assign (binding,location) to vertex inputs
    - assign (set,binding) to descriptor sets
    - generate vertex input attributes & binding info
    - emit GLSL code and compile into spirv arrays

How to optimize descriptor set allocation?
===========================================================================
def P(a: A, b: B, c: C) { ... }

def main(xs: atomset) {
  for x in xs {
    rt += P(a=x, b=x, c=x)
  }
}

Demo ideas
===========================================================================
- hello world
- deferred
- culling (tiled deferred maybe?)
- many/different lights
- post effect (bloom, or motion blur)
- loaded model (Sponza?)

